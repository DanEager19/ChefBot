name: CI/CD
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
jobs:
  unit-test-api:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test
        ports:
          - 5432:5432
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Dependencies
        run: yarn install
        working-directory: ./api
      - name: Unit testing
        run: yarn test
        working-directory: ./api
        env:
          POSTGRES_HOST: localhost
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DATABASE: test
  unit-test-bot:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Dependencies
        run: yarn install
        working-directory: ./bot
      - name: Unit testing
        run: yarn test
        working-directory: ./bot
  deploy-to-digital-ocean:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup directory and files
        run: 'mkdir $HOME/.ssh && touch $HOME/.ssh/id_rsa'
        shell: 'bash'
      - name: Install SSH key
        run: 'echo "$SSH_KEY" > $HOME/.ssh/id_rsa'
        shell: 'bash'
        env:
          SSH_KEY: ${{ secrets.PVT_KEY }}
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.10
      - name: Terraform init
        id: init
        run: terraform init
      - name: Terraform plan
        id: plan
        env:
          TF_VAR_do_token: ${{ secrets.DO_TOKEN }}
          TF_VAR_discord_api_token: ${{ secrets.DISCORD_TOKEN }}
          TF_VAR_guild_id: ${{ secrets.GUILD_ID }}
          TF_VAR_client_id: ${{ secrets.CLIENT_ID }}
          TF_VAR_sendgrid_api_key: ${{ secrets.SENDGRID_API_TOKEN }}
        run: terraform plan -no-color -var "pvt_key=$HOME/.ssh/id_rsa"
      - name: Terraform apply
        id: apply
        env:
          TF_VAR_do_token: ${{ secrets.DO_TOKEN }}
          TF_VAR_discord_api_token: ${{ secrets.DISCORD_TOKEN }}
          TF_VAR_guild_id: ${{ secrets.GUILD_ID }}
          TF_VAR_client_id: ${{ secrets.CLIENT_ID }}
          TF_VAR_sendgrid_api_key: ${{ secrets.SENDGRID_API_TOKEN }}
        run: terraform apply -auto-approve -var "pvt_key=$HOME/.ssh/id_rsa"  
  